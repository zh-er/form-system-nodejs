{"version":3,"sources":["api/config.ts","api/entry.service.ts","data/AuthContext.ts","models/Entry.model.ts","utils/report-status.ts","pages/entries/EntryItem.tsx","pages/entries/Entries.tsx","api/auth.service.ts","pages/login/Login.tsx","models/Report.model.ts","pages/signup/Signup.tsx","api/user.service.ts","models/User.model.ts","pages/report/Report.tsx","data/useUser.ts","routes/ProtectedRoute.tsx","components/navbar/Navbar.tsx","app/App.tsx","data/useProvideAuth.ts","reportWebVitals.ts","index.tsx"],"names":["Config","apiUrl","process","API_BASE_URL","BASE_URL","data","token","a","url","requestOptions","method","headers","body","JSON","stringify","fetch","then","resp","json","updateReport","id","getAllEntries","args","Authorization","map","updatedAt","Date","getEntryById","content","EntryStatus","AuthContext","createContext","loginUser","logoutUser","isLoggedIn","useAuth","useContext","EntryStatusString","reportStatus","ACCEPTED","APPROVED","REJECTED","PENDING","EntryItem","props","date","username","status","to","className","toDateString","Entries","useSWR","error","entry","index","ReportMode","Login","useState","email","undefined","password","loginData","setLoginData","loading","setLoading","history","useHistory","handleFormChange","event","target","name","value","onSubmit","preventDefault","requestOption","login","console","log","push","htmlFor","type","autoComplete","placeholder","required","onChange","disabled","href","Signup","confirmedPassword","signUp","UserRole","getUser","user","Report","mode","VIEW","reportMode","setReportMode","setUser","refreshInterval","mutate","useEffect","useUser","errorRetryCount","role","ADMIN","onClick","EDIT","toLocaleString","CREATE","createReport","ReportWithId","useParams","ProtectedRoute","component","Navbar","cache","clear","App","auth","localStorage","getItem","setToken","setIsLoggedIn","setItem","removeItem","useProvideAuth","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.329a78f9.chunk.js","sourcesContent":["export const Config = {\n    apiUrl: process.env.API_BASE_URL || '/'\n}\n","import {Entry} from \"../models/Entry.model\";\nimport {Config} from \"./config\";\n\nconst BASE_URL = Config.apiUrl\n\nexport async function createReport(data: Entry, token: string): Promise<Entry> {\n\n    const url = `${BASE_URL}/report`\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token\n        },\n        body: JSON.stringify(data)\n    }\n\n    return fetch(url, requestOptions)\n        .then((resp) => resp.json())\n        .then((resp) => resp.data)\n}\n\nexport function updateReport(data: Entry, token: string): Promise<Entry> {\n\n    const url = `${BASE_URL}/report/${data.id}`\n\n    const requestOptions = {\n        method: 'PUT',\n        headers: {'Content-Type': 'application/json', 'Authorization': token},\n        body: JSON.stringify(data)\n    }\n    return fetch(url, requestOptions)\n        .then((resp) => resp.json())\n        .then((resp) => resp.data)\n}\n\n\nexport function getAllEntries(...args: [string, string]): Promise<Entry[]> {\n    const [, token] = args;\n    const url = `${BASE_URL}/report/`;\n\n    const requestOptions = {\n        method: 'GET',\n        headers: {\n            Authorization: token\n        }\n    };\n\n    return fetch(url, requestOptions)\n        .then((resp) => resp.json())\n        .then((resp) => resp.data\n            .map((data: Entry) => ({\n                ...data,\n                updatedAt: new Date(data.updatedAt)\n            })))\n}\n\nexport async function getEntryById(...args: [string | null, string | null, string | null]): Promise<Entry> {\n    const [, id, token] = args;\n\n    if (!id) {\n        return {content: '', updatedAt: new Date()}\n    }\n    const url = `${BASE_URL}/report/${id}`;\n\n    const requestOptions = {\n        method: 'GET',\n        headers: {\n            Authorization: token ? token : ''\n        }\n    };\n\n\n    return fetch(url, requestOptions)\n        .then((resp) => resp.json())\n        .then((resp) => resp.data)\n}\n","import {createContext, useContext} from \"react\";\n\nexport interface IAuthContext {\n    loginUser: (token: string) => void,\n    logoutUser: () => void,\n    isLoggedIn: boolean,\n    token: string | null\n}\n\nexport const AuthContext = createContext<IAuthContext>({\n    loginUser: (token: string) => {\n    },\n    logoutUser: () => {\n    },\n    isLoggedIn: false,\n    token: null,\n})\n\nexport default function useAuth() {\n    return useContext(AuthContext);\n}\n\n","export interface Entry {\n    id?: string, // uuid\n    updatedAt: Date,\n    username?: string,\n    status?: EntryStatus,\n    content: string\n}\n\nexport enum EntryStatus {\n    PENDING,\n    ACCEPTED,\n    APPROVED,\n    REJECTED,\n}\n","import {EntryStatus} from \"../models/Entry.model\";\n\nexport const EntryStatusString = (reportStatus?: EntryStatus) => {\n    switch (reportStatus) {\n        case EntryStatus.ACCEPTED:\n            return 'Accepted'\n        case EntryStatus.APPROVED:\n            return 'Approved'\n        case EntryStatus.REJECTED:\n            return 'Rejected'\n        case EntryStatus.PENDING:\n        default:\n            return 'Pending'\n    }\n}\n","import React, {FunctionComponent} from 'react';\nimport {Link} from 'react-router-dom';\nimport {EntryStatus} from \"../../models/Entry.model\";\nimport {EntryStatusString} from \"../../utils/report-status\";\n\nexport interface IEntryItemProps {\n    id?: string, // uuid\n    date: Date,\n    username?: string,\n    status?: EntryStatus,\n    content: string\n}\n\nexport const EntryItem: FunctionComponent<IEntryItemProps> = (props) => {\n\n    const {id, date, username, status, content} = props;\n\n    return (\n        <Link to={`/entry/${id}`} className={\"max-w-screen-sm w-full\"}>\n            <div className={\"bg-gray-50 px-4 py-3 mx-4 my-2 hover:bg-gray-200 rounded-md shadow\"}>\n                <div className={\"flex border-b border-gray-200 mb-1 pb-2\"}>\n                    <div className={\"flex-1 flex items-start flex-col\"}>\n                        <div className={\"font-medium text-black\"}>\n                            {date.toDateString()}\n                        </div>\n                        <div>Created by: {username}</div>\n                    </div>\n                    <div className={\"ml-4 flex items-start justify-center font-bold\"}>\n                        {EntryStatusString(status)}\n                    </div>\n                </div>\n\n                <p className={\"h-12 max-w-full overflow-ellipsis text-left overflow-hidden\"}>\n                    {content}\n                </p>\n            </div>\n        </Link>\n    )\n}\n","import React from 'react';\nimport {Entry} from \"../../models/Entry.model\";\nimport {Link} from 'react-router-dom';\nimport useSWR from \"swr\";\nimport {getAllEntries} from \"../../api/entry.service\";\nimport useAuth from \"../../data/AuthContext\";\nimport {EntryItem} from './EntryItem';\n\nexport const Entries = () => {\n\n    const {token} = useAuth();\n    const {data, error} = useSWR<Entry[]>(['report/', token], getAllEntries);\n\n    return (\n        <div className={\"h-screen\"}>\n            <div className={\"flex justify-end mt-2\"}>\n                <Link to={\"/entry/create\"} className={\"btn-blue px-3 py-2 m-2 bg-green-600 rounded text-white text-sm\"}>\n                    Create New Report\n                </Link>\n            </div>\n            <div className={\"flex flex-col items-center\"}>\n                {\n                    error ?\n                        <div>Error loading</div> :\n                        data?.map((entry, index) => (\n                            <EntryItem\n                                key={index}\n                                id={entry.id}\n                                date={entry.updatedAt}\n                                username={entry.username}\n                                status={entry.status}\n                                content={entry.content}/>\n                        ))\n                }\n            </div>\n        </div>\n    );\n}\n","import {User} from \"../models/User.model\";\nimport {Config} from \"./config\";\n\nconst BASE_URL = Config.apiUrl;\n\nexport interface ILoginResponse {\n    token: string,\n    user: User\n}\n\nexport function login(email?: string, password?: string): Promise<ILoginResponse> {\n\n    const url = `${BASE_URL}/user/login`;\n\n    const requestOption = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password\n        })\n    }\n\n    return fetch(url, requestOption)\n        .then((resp) => resp.json())\n}\n\nexport function signUp(email?: string, password?: string, username?: string): Promise<any> {\n    const url = `${BASE_URL}/user/signup`;\n\n    const requestOption = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email,\n            password,\n            username\n        })\n    }\n\n    return fetch(url, requestOption)\n        .then((resp) => resp.json())\n\n}\n\nexport function refreshToken(token: string): Promise<Response> {\n    const url = ``;\n    const requestOption = {\n        method: 'POST',\n        body: JSON.stringify({token})\n    }\n    return fetch(url, requestOption)\n        .then((response) => {\n            return response;\n        })\n}\n\n","import React, {ChangeEvent, FormEvent, useState} from \"react\";\nimport useAuth from \"../../data/AuthContext\";\nimport {login} from \"../../api/auth.service\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const Login = () => {\n\n    const [loginData, setLoginData] = useState<{ email?: string, password?: string }>({\n        email: undefined,\n        password: undefined\n    });\n    const [loading, setLoading] = useState(false);\n    const {loginUser} = useAuth();\n    const history = useHistory();\n\n    const handleFormChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = event.target;\n        setLoginData({...loginData, [name]: value})\n    }\n\n    const handleLogin = (event: FormEvent) => {\n        event.preventDefault();\n        setLoading(true);\n        login(loginData.email, loginData.password)\n            .then((resp) => {\n                console.log(resp);\n                setLoading(false)\n                loginUser(resp.token)\n                history.push('/')\n            })\n    }\n\n\n    return (\n        <div className={\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\"}>\n            <div className=\"max-w-sm w-full space-y-8\">\n                <div>\n                    <h3 className=\"font-bold text-2xl uppercase\">Report System</h3>\n                </div>\n                <form className=\"mt-8 space-y-6\" onSubmit={handleLogin}>\n                    <div className=\"rounded-md shadow-sm -space-y-px\">\n                        <div>\n                            <label htmlFor=\"email-address\" className=\"sr-only\">\n                                Email address\n                            </label>\n                            <input\n                                name=\"email\"\n                                type=\"email\"\n                                autoComplete=\"email\"\n                                className={\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"}\n                                placeholder=\"Email address\"\n                                required\n                                onChange={handleFormChange}\n                            />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\" className=\"sr-only\">\n                                Password\n                            </label>\n                            <input\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                placeholder=\"Password\"\n                                className={\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"}\n                                required\n                                onChange={handleFormChange}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <button\n                            type='submit'\n                            disabled={loading}\n                            className={\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"}\n                        >\n                            {loading ? 'Loading...' : 'Login'}\n                        </button>\n                    </div>\n                    <div>\n                        <div className=\"text-sm\">\n                            No account? Click\n                            <a href=\"signup\" className=\"px-1 font-bold lg:hover:underline\">\n                                here\n                            </a>\n                            to sign up!\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n","export enum ReportMode {\n    VIEW,\n    CREATE,\n    EDIT,\n}\n","import React, {ChangeEvent, FormEvent, useState} from \"react\";\nimport {signUp} from \"../../api/auth.service\";\nimport useAuth from \"../../data/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport const Signup = () => {\n    const [loginData, setLoginData] = useState<{ email?: string, password?: string, username?: string, confirmedPassword?: string }>({\n        email: undefined,\n        password: undefined\n    });\n\n    const [loading, setLoading] = useState(false);\n\n    const {loginUser} = useAuth();\n    const history = useHistory();\n\n    const handleFormChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const {name, value} = event.target;\n        setLoginData({...loginData, [name]: value})\n    }\n\n    const handleSignUp = (event: FormEvent) => {\n        event.preventDefault();\n        setLoading(true);\n\n        console.log(loginData);\n\n        if (loginData.confirmedPassword === loginData.password) {\n            console.log('here')\n            signUp(loginData.email, loginData.password, loginData.username)\n                .then((resp) => {\n                    console.log(resp)\n                    loginUser(resp.token);\n                    setLoading(false);\n                    history.push('/')\n                })\n        } else {\n            setLoading(false);\n        }\n\n\n    }\n\n    return <div className={\"min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\"}>\n        <div className=\"max-w-sm w-full space-y-8\">\n            <div className=\"text-center\">\n                <h3 className=\"font-bold text-2xl uppercase\">Sign Up</h3>\n            </div>\n            <form className=\"mt-8 space-y-6\" onSubmit={handleSignUp}>\n                <div className=\"rounded-md shadow-sm -space-y-px\">\n                    <div>\n                        <label htmlFor=\"email-address\" className=\"sr-only\">\n                            Email address\n                        </label>\n                        <input\n                            name=\"email\"\n                            type=\"email\"\n                            autoComplete=\"email\"\n                            className={\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 rounded-t-md text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"}\n                            placeholder=\"Email address\"\n                            required\n                            onChange={handleFormChange}\n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"email-address\" className=\"sr-only\">\n                            Username\n                        </label>\n                        <input\n                            name=\"username\"\n                            type=\"name\"\n                            autoComplete=\"username\"\n                            className={\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"}\n                            placeholder=\"Username\"\n                            required\n                            onChange={handleFormChange}\n                        />\n                    </div>\n\n\n                    <div>\n                        <label htmlFor=\"password\" className=\"sr-only\">\n                            Password\n                        </label>\n                        <input\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            className={\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"}\n                            required\n                            onChange={handleFormChange}\n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"password\" className=\"sr-only\">\n                            Confirm Password\n                        </label>\n                        <input\n                            name=\"confirmedPassword\"\n                            type=\"password\"\n                            placeholder=\"Confirm password\"\n                            className={\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 rounded-b-md text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"}\n                            required\n                            onChange={handleFormChange}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <button\n                        type='submit'\n                        disabled={loading}\n                        className={\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"}\n                    >\n                        {loading ? 'Loading...' : 'Sign Up'}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n}\n","import {User} from \"../models/User.model\";\nimport {Config} from \"./config\";\n\nconst BASE_URL = Config.apiUrl\n\nexport default function getUser(token: string): Promise<User> {\n    const url = BASE_URL + `/user/info`;\n    const opts = {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token\n        }\n    }\n    return fetch(url, opts)\n        .then((resp) => resp.json())\n        .then((data) => data.user as User)\n}\n","export interface User {\n    id: string; // uuid\n    username: string;\n    email: string;\n    role: UserRole;\n}\n\nexport enum UserRole {\n    ADMIN,\n    USER\n}\n","import React, {ChangeEvent, FunctionComponent, useState} from \"react\";\nimport {ReportMode} from \"../../models/Report.model\";\nimport {Entry, EntryStatus} from \"../../models/Entry.model\";\nimport useAuth from \"../../data/AuthContext\";\nimport useSWR from \"swr\";\nimport {createReport, getEntryById, updateReport} from \"../../api/entry.service\";\nimport useUser from \"../../data/useUser\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {UserRole} from \"../../models/User.model\";\n\nexport interface IReportProps {\n    mode: ReportMode,\n    id?: string\n}\n\nexport const Report: FunctionComponent<IReportProps> = ({mode = ReportMode.VIEW, id}) => {\n\n    const [reportMode, setReportMode] = useState(mode);\n    const history = useHistory();\n\n    const {token} = useAuth();\n    const {user} = useUser();\n    const {data, mutate, error} = useSWR<Entry>(['/report/id', id, token], getEntryById, {\n        errorRetryCount: 0,\n        refreshInterval: 0,\n    })\n\n\n    const handleTextAreaChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\n        if (data) {\n            mutate({\n                ...data,\n                content: event.target.value\n            }, false)\n        }\n    }\n\n    const submitReport = () => {\n        console.log('submitReport', data, reportMode)\n        if (token && data) {\n            if (reportMode === ReportMode.CREATE) {\n                createReport(data, token)\n                    .then((entry) => {\n                        history.push(`/entry/${entry.id}`)\n                    })\n            }\n            if (reportMode === ReportMode.EDIT) {\n                updateReport(data, token)\n                    .then((entry) => {\n                        mutate({\n                            ...entry\n                        }, false)\n                        setReportMode(ReportMode.VIEW)\n                    })\n            }\n\n        }\n    }\n\n    const editReport = () => {\n        if (reportMode === ReportMode.VIEW) {\n            setReportMode(ReportMode.EDIT)\n        } else {\n            setReportMode(ReportMode.VIEW)\n        }\n    }\n\n    const approveReport = () => {\n        if (data && token) {\n            updateReport({\n                ...data,\n                status: EntryStatus.APPROVED\n            }, token)\n                .then((entry) => {\n                    mutate({\n                        ...entry\n                    })\n                    setReportMode(ReportMode.VIEW)\n                })\n        }\n    }\n\n    if (error) {\n        return <div className=\"flex justify-center items-center\">\n            Failed to load, please refresh\n        </div>\n    }\n\n    return (\n        <div className={\"flex justify-center items-center\"}>\n\n            <div className={\"max-w-screen-sm w-full px-3\"}>\n\n                <div className={\"flex justify-between mt-6 mb-3\"}>\n                    <h1 className={\"font-bold text-2xl\"}>\n                        Report\n                    </h1>\n                    {\n                        (data?.status === EntryStatus.PENDING && user?.role === UserRole.ADMIN) ?\n                            <div>\n                                <button\n                                    onClick={editReport}\n                                    className={\"my-2 mx-3 py-1 px-6 border border-transparent text-sm font-medium rounded-md text-white bg-blue-500 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"}>\n                                    Edit\n                                </button>\n                                <button\n                                    onClick={approveReport}\n                                    className={\"my-2 py-1 px-6 border border-transparent text-sm font-medium rounded-md text-white bg-green-500 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"}>\n                                    Approve\n                                </button>\n                            </div>\n                            : null\n                    }\n\n                </div>\n                <div>\n                    Date: {data?.updatedAt ? data?.updatedAt?.toLocaleString() : new Date().toLocaleString()}\n                </div>\n                <div>\n                    Edit By: {data?.username ? data?.username : user?.username}\n                </div>\n\n                <div className={\"w-full mt-4\"}>\n                    {\n                        reportMode === ReportMode.VIEW ?\n                            <div>\n                                {data?.content}\n                            </div>\n                            :\n                            <div>\n                                <div>\n                            <textarea\n                                className={\"w-full\"}\n                                value={data?.content}\n                                onChange={handleTextAreaChange}\n                            />\n                                </div>\n                                <div className={\"w-full flex justify-center\"}>\n                                    <button\n                                        onClick={submitReport}\n                                        className={\"my-2 py-1 px-6 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"}>\n                                        Save\n                                    </button>\n\n\n                                </div>\n\n                            </div>\n\n                    }\n\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n\n\nexport const ReportWithId: FunctionComponent = (props) => {\n    const {id} = useParams<{ id?: string }>()\n    return <Report {...props} mode={ReportMode.VIEW} id={id}/>\n}\n","import useSWR from \"swr\";\nimport useAuth from \"./AuthContext\";\nimport getUser from \"../api/user.service\";\nimport {useEffect, useState} from \"react\";\nimport {User} from \"../models/User.model\";\n\nexport default function useUser() {\n    const {token} = useAuth();\n    const [user, setUser] = useState<User | null>(null);\n    const {data, mutate, error} = useSWR(token, getUser, {refreshInterval: 0});\n\n    useEffect(() => {\n        if (data) {\n            setUser(data)\n        }\n        if (error) {\n            setUser(null)\n        }\n    }, [data, error])\n\n    return {\n        user,\n        mutate\n    }\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Redirect, Route, RouteProps} from \"react-router-dom\";\nimport useAuth from \"../data/AuthContext\";\n\nexport const ProtectedRoute: FunctionComponent<RouteProps> = (props) => {\n    const {isLoggedIn} = useAuth();\n\n    if (!isLoggedIn) {\n        return <Redirect to={'/login'}/>\n    }\n\n    return <Route {...props} component={props.component}/>;\n}\n","import React, {Fragment} from \"react\";\nimport useAuth from \"../../data/AuthContext\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {cache} from 'swr';\n\nconst Navbar = () => {\n\n    const {isLoggedIn, logoutUser} = useAuth();\n    const history = useHistory();\n\n    const handleLogout = () => {\n        logoutUser();\n        cache.clear();\n        history.push('/login', {})\n    }\n\n    if (!isLoggedIn) {\n        return (<Fragment/>)\n    }\n\n    return (\n\n        <nav className={'flex max-w-full h-12 shadow-sm justify-between items-center bg-gray-200'}>\n            <div>\n                <Link to={\"/\"}>\n                    <h3 className={\"mx-4 font-bold text-lg\"}>Report System</h3>\n                </Link>\n            </div>\n\n            <div className={'flex'}>\n                <div className={\"mx-2\"}>\n                    <button\n                        onClick={handleLogout}\n                        className={'bg-gray-500 px-5 py-1 rounded-md text-white'}\n                    >\n                        Logout\n                    </button>\n                </div>\n            </div>\n\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport {Entries} from \"../pages/entries/Entries\";\nimport {Login} from \"../pages/login/Login\";\nimport {Signup} from \"../pages/signup/Signup\";\nimport {AuthContext} from '../data/AuthContext';\nimport {Report, ReportWithId} from \"../pages/report/Report\";\nimport {ProtectedRoute} from \"../routes/ProtectedRoute\";\nimport {ReportMode} from \"../models/Report.model\";\nimport Navbar from \"../components/navbar/Navbar\";\nimport {useProvideAuth} from \"../data/useProvideAuth\";\n\nfunction App() {\n\n    const auth = useProvideAuth();\n\n    return (\n        <AuthContext.Provider value={auth}>\n\n            <div className=\"bg-gray-100 h-screen\">\n                <Navbar/>\n                <Switch>\n                    <ProtectedRoute exact path='/'>\n                        <Entries/>\n                    </ProtectedRoute>\n                    <ProtectedRoute exact path='/entry/create'>\n                        <Report mode={ReportMode.CREATE}/>\n                    </ProtectedRoute>\n                    <ProtectedRoute path='/entry/:id'>\n                        <ReportWithId/>\n                    </ProtectedRoute>\n                    <Route path='/login'>\n                        <Login/>\n                    </Route>\n                    <Route path='/signup'>\n                        <Signup/>\n                    </Route>\n                    <Route path='*'>\n                        Page not found :(\n                    </Route>\n                </Switch>\n            </div>\n\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import {useState} from \"react\";\nimport {IAuthContext} from \"./AuthContext\";\n\nexport const useProvideAuth: () => IAuthContext = () => {\n    const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n    const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));\n\n    const loginUser = (token: string) => {\n        localStorage.setItem('token', token)\n        setToken(token);\n        setIsLoggedIn(true);\n    }\n\n    const logoutUser = () => {\n        localStorage.removeItem('token')\n        setToken(null)\n        setIsLoggedIn(false);\n    }\n\n    return {\n        loginUser,\n        logoutUser,\n        isLoggedIn,\n        token,\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}